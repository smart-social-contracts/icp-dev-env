name: Create new release

on:
  workflow_dispatch:  # Manual triggering only
    inputs:
      release_type:
        description: 'Type of release (patch, minor, major)'
        required: false
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      create_github_release:
        description: 'Create GitHub Release'
        required: false
        default: true
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bumpversion
    
    # Set default release type for manual runs with empty inputs
    - name: Set release type
      id: set_release_type
      run: |
        if [ "${{ github.event.inputs.release_type }}" == "" ]; then
          echo "RELEASE_TYPE=patch" >> $GITHUB_ENV
          echo "CREATE_GITHUB_RELEASE=true" >> $GITHUB_ENV
        else
          echo "RELEASE_TYPE=${{ github.event.inputs.release_type }}" >> $GITHUB_ENV
          echo "CREATE_GITHUB_RELEASE=${{ github.event.inputs.create_github_release }}" >> $GITHUB_ENV
        fi
    
    # Perform version bump with the determined release type
    - name: Bump version
      id: bump_version
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        bumpversion ${{ env.RELEASE_TYPE }}
        echo "NEW_VERSION=$(cat version.txt)" >> $GITHUB_OUTPUT
    
    # Push changes
    - name: Push changes
      run: |
        git push origin
        git push origin --tags
    
    # Create a GitHub release
    - name: Create Release
      if: ${{ env.CREATE_GITHUB_RELEASE == 'true' }}
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.bump_version.outputs.NEW_VERSION }}
        name: Release v${{ steps.bump_version.outputs.NEW_VERSION }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}